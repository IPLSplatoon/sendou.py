name: Pull request

# Make sure only the latest push to the PR's source branch runs and cancel any on-going previous run
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

on:
  pull_request:

jobs:
  Pull-Request:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with=dev
      - name: Check Schema Hash with upstream
        run: |
          source .venv/bin/activate
          python scripts/checkUpstreamSchema.py
      - name: Install library
        run: poetry install --no-interaction
      - name: Run tests
        env:
          REPORT_OUTPUT: md_report.md
        shell: bash
        run: |
          source .venv/bin/activate
          echo "REPORT_FILE=${REPORT_OUTPUT}" >> "$GITHUB_ENV"
          pytest -v --md-report --md-report-flavor gfm --md-report-exclude-outcomes passed skipped xpassed --md-report-output "$REPORT_OUTPUT"
      - name: Render the report to the PR when tests fail
        uses: marocchino/sticky-pull-request-comment@v2
        if: failure()
        with:
          header: test-report
          recreate: true
          path: ${{ env.REPORT_FILE }}
      - name: Output reports to the job summary
        shell: bash
        run: |
          if [ -f "$REPORT_FILE" ]; then
            echo "<details><summary>Test Report</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi
